var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output } from '@angular/core';
import { EventEmitter } from '@angular/core';
export var TdExpansionPanelSummaryComponent = (function () {
    function TdExpansionPanelSummaryComponent() {
    }
    TdExpansionPanelSummaryComponent = __decorate([
        Component({
            selector: 'td-expansion-summary',
            template: '<ng-content></ng-content>',
        }), 
        __metadata('design:paramtypes', [])
    ], TdExpansionPanelSummaryComponent);
    return TdExpansionPanelSummaryComponent;
}());
export var TdExpansionPanelComponent = (function () {
    function TdExpansionPanelComponent() {
        this._expand = false;
        this._disabled = false;
        /**
         * expanded?: function
         * Event emitted when [TdExpansionPanelComponent] is expanded.
         */
        this.expanded = new EventEmitter();
        /**
         * collapsed?: function
         * Event emitted when [TdExpansionPanelComponent] is collapsed.
         */
        this.collapsed = new EventEmitter();
    }
    Object.defineProperty(TdExpansionPanelComponent.prototype, "expand", {
        get: function () {
            return this._expand;
        },
        /**
         * expand?: boolean
         * Toggles [TdExpansionPanelComponent] between expand/collapse.
         */
        set: function (expand) {
            this._setExpand(expand);
        },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Object.defineProperty(TdExpansionPanelComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        /**
         * disabled?: boolean
         * Disables icon and header, blocks click event and sets [TdStepComponent] to deactive if 'true'.
         */
        set: function (disabled) {
            if (disabled && this._expand) {
                this._expand = false;
                this._onCollapsed();
            }
            this._disabled = disabled;
        },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    /**
     * Method executed when [TdExpansionPanelComponent] is clicked.
     */
    TdExpansionPanelComponent.prototype.clickEvent = function () {
        this._setExpand(!this._expand);
    };
    ;
    /**
     * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]
     * event if 'false'. (Blocked if [disabled] is 'true')
     */
    TdExpansionPanelComponent.prototype._setExpand = function (newExpand) {
        if (this._disabled) {
            return;
        }
        if (this._expand !== newExpand) {
            this._expand = newExpand;
            if (newExpand) {
                this._onExpanded();
            }
            else {
                this._onCollapsed();
            }
        }
    };
    ;
    TdExpansionPanelComponent.prototype._onExpanded = function () {
        this.expanded.emit(undefined);
    };
    ;
    TdExpansionPanelComponent.prototype._onCollapsed = function () {
        this.collapsed.emit(undefined);
    };
    ;
    __decorate([
        Input(), 
        __metadata('design:type', String)
    ], TdExpansionPanelComponent.prototype, "label", void 0);
    __decorate([
        Input(), 
        __metadata('design:type', String)
    ], TdExpansionPanelComponent.prototype, "sublabel", void 0);
    __decorate([
        Input('expand'), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], TdExpansionPanelComponent.prototype, "expand", null);
    __decorate([
        Input('disabled'), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], TdExpansionPanelComponent.prototype, "disabled", null);
    __decorate([
        Output(), 
        __metadata('design:type', EventEmitter)
    ], TdExpansionPanelComponent.prototype, "expanded", void 0);
    __decorate([
        Output(), 
        __metadata('design:type', EventEmitter)
    ], TdExpansionPanelComponent.prototype, "collapsed", void 0);
    TdExpansionPanelComponent = __decorate([
        Component({
            selector: 'td-expansion-panel',
            styles: [":host { background-color: #fff; display: block; box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); } :host .panel { transition: 1s all ease; margin: 0; } :host:first-of-type .td-expanded { margin-bottom: 16px; } :host:not(:first-of-type):not(:last-of-type) .td-expanded { margin-top: 16px; margin-bottom: 16px; } :host:last-of-type .td-expanded { margin-top: 16px; } :host md-nav-list:first-of-type, :host md-list:first-of-type { padding-top: 0; } .md-disabled, .md-disabled * { color: #9e9e9e; } md-nav-list { padding: 0; } md-icon { color: #9e9e9e; } .td-expansion-primary, .td-expansion-secondary { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin-right: 5px; } .td-expansion-secondary { color: #616161; } "],
            template: "<div class=\"panel\"  [class.td-expanded]=\"expand\"> <md-nav-list> <a [tabIndex]=\"disabled? -1 : 0\" (keydown.enter)=\"clickEvent()\" (click)=\"clickEvent()\"        md-list-item> <div [class.md-disabled]=\"disabled\" layout=\"row\"  layout-align=\"start center\"  flex> <div class=\"md-subhead td-expansion-primary\" flex-gt-xs=\"33\">{{label || 'Click to expand '}}</div> <div class=\"md-body-1 td-expansion-secondary\">{{sublabel}}</div> <span flex></span> <md-icon *ngIf=\"!expand && !disabled\">keyboard_arrow_down</md-icon> <md-icon *ngIf=\"expand\">keyboard_arrow_up</md-icon> </div> </a> </md-nav-list> <div> <div [tdToggle]=\"!expand\"> <ng-content></ng-content> </div> <div [tdToggle]=\"expand\"> <ng-content select=\"td-expansion-summary\"></ng-content> </div> </div> </div>",
        }), 
        __metadata('design:paramtypes', [])
    ], TdExpansionPanelComponent);
    return TdExpansionPanelComponent;
}());

//# sourceMappingURL=expansion-panel.component.js.map
