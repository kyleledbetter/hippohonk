var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component } from '@angular/core';
import { Output, EventEmitter } from '@angular/core';
import { ViewChild } from '@angular/core';
import { MdSidenav } from '@angular/material';
import { TdLayoutService } from '../services/layout.service';
export var TdLayoutManageListComponent = (function () {
    function TdLayoutManageListComponent(layoutService) {
        this.layoutService = layoutService;
        this._transitioning = false;
        /**
         * method thats called when menu is clicked
         */
        this.onOpenMenu = new EventEmitter();
    }
    TdLayoutManageListComponent.prototype.menuClick = function () {
        this._onMenuClick();
    };
    /**
     * Proxy toggle method to access sidenav from outside (from td-layout template).
     */
    TdLayoutManageListComponent.prototype.toggle = function () {
        var _this = this;
        if (!this._transitioning) {
            this._transitioning = true;
            this._sideNav.toggle().then(function () {
                _this._transitioning = false;
            });
        }
    };
    /**
     * Proxy open method to access sidenav from outside (from td-layout template).
     */
    TdLayoutManageListComponent.prototype.open = function () {
        var _this = this;
        if (!this._transitioning) {
            this._transitioning = true;
            this._sideNav.open().then(function () {
                _this._transitioning = false;
            });
        }
    };
    /**
     * Proxy close method to access sidenav from outside (from td-layout template).
     */
    TdLayoutManageListComponent.prototype.close = function () {
        var _this = this;
        if (!this._transitioning) {
            this._transitioning = true;
            this._sideNav.close().then(function () {
                _this._transitioning = false;
            });
        }
    };
    /**
     * emits menuEvent
     */
    TdLayoutManageListComponent.prototype._onMenuClick = function () {
        this.onOpenMenu.emit(undefined);
        this.layoutService.openSideNav('menu');
    };
    __decorate([
        ViewChild(MdSidenav), 
        __metadata('design:type', MdSidenav)
    ], TdLayoutManageListComponent.prototype, "_sideNav", void 0);
    __decorate([
        Output('openMenu'), 
        __metadata('design:type', EventEmitter)
    ], TdLayoutManageListComponent.prototype, "onOpenMenu", void 0);
    TdLayoutManageListComponent = __decorate([
        Component({
            selector: 'td-layout-manage-list',
            styles: [":host { margin: 0; width: 100%; min-height: 100%; height: 100%; position: relative; display: flex; z-index: 0; overflow: hidden; } :host /deep/ md-nav-list a[md-list-item] .md-list-item { font-size: 14px; } :host /deep/ md-sidenav-layout > .md-sidenav-content { margin-left: 0 !important; } @media (max-width: 599px) { :host /deep/ md-sidenav-layout > md-sidenav { width: 100%; } } @media (min-width: 600px) { :host /deep/ md-sidenav-layout { height: 100%; display: flex; } :host /deep/ md-sidenav-layout > md-sidenav { width: 257px; transition: none; display: flex; position: relative; height: 100%; min-height: 100%; flex: 0 0 auto; } :host /deep/ md-sidenav-layout > md-sidenav.md-sidenav-closed, :host /deep/ md-sidenav-layout > md-sidenav.md-sidenav-closing { visibility: visible; transform: translate3d(0, 0, 0); } :host /deep/ md-sidenav-layout > .md-sidenav-content { display: flex; flex-grow: 1; } } .list { background-color: #fff; text-align: start; } .content { overflow: hidden; } "],
            template: "<div class=\"md-content\" layout=\"column\" layout-fill> <md-sidenav-layout class=\"md-content\" flex layout=\"row\" layout-fill> <md-sidenav opened align=\"start\" mode=\"side\" layout=\"column\" layout-fill class=\"md-sidenav-left app-list md-whiteframe-z1\"> <div flex class=\"md-content list\"> <ng-content select=\"[list-items]\"></ng-content> </div> </md-sidenav> <div layout=\"column\" layout-fill class=\"md-content content\"> <md-toolbar class=\"md-whiteframe-z1\"> <button md-button (click)=\"toggle()\" md-icon-button hide-gt-xs><md-icon class=\"md-24\">arrow_back</md-icon></button> <ng-content select=\"[toolbar-buttons]\"></ng-content> </md-toolbar> <div class=\"md-content\" flex> <ng-content></ng-content> </div> </div> </md-sidenav-layout> </div> ",
        }), 
        __metadata('design:paramtypes', [TdLayoutService])
    ], TdLayoutManageListComponent);
    return TdLayoutManageListComponent;
}());

//# sourceMappingURL=layout-manage-list.component.js.map
