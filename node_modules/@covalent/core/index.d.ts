import { Type } from '@angular/core';
import { ModuleWithProviders } from '@angular/core';
export declare const TD_LAYOUT_DIRECTIVES: Type<any>[];
export declare const TD_LAYOUT_PROVIDERS: Type<any>[];
export { TdLayoutComponent } from './layout/layout.component';
export { TdLayoutNavComponent } from './layout/layout-nav/layout-nav.component';
export { TdLayoutNavListComponent } from './layout/layout-nav-list/layout-nav-list.component';
export { TdLayoutCardOverComponent } from './layout/layout-card-over/layout-card-over.component';
export { TdLayoutManageListComponent } from './layout/layout-manage-list/layout-manage-list.component';
export declare const TD_STEP_DIRECTIVES: Type<any>[];
export { TdStepComponent, StepState } from './steps/step.component';
export { TdStepsComponent, IStepChangeEvent, StepMode } from './steps/steps.component';
export declare const TD_LOADING_ENTRY_COMPONENTS: Type<any>[];
export { LoadingType, LoadingMode } from './loading/loading.component';
export { TdLoadingService, ILoadingOptions } from './loading/services/loading.service';
export { TdExpansionPanelComponent } from './expansion-panel/expansion-panel.component';
export declare const TD_EXPANSION_DIRECTIVES: Type<any>[];
export declare const TD_DIALOG_ENTRY_COMPONENTS: Type<any>[];
export { TdDialogService, IAlertConfig, IConfirmConfig, IPromptConfig } from './dialogs/services/dialog.service';
export { TdDialogComponent, TdDialogTitleDirective } from './dialogs/dialog.component';
export { TdAlertDialogComponent } from './dialogs/alert-dialog/alert-dialog.component';
export { TdConfirmDialogComponent } from './dialogs/confirm-dialog/confirm-dialog.component';
export { TdPromptDialogComponent } from './dialogs/prompt-dialog/prompt-dialog.component';
export declare const TD_PLATFORM_DIRECTIVES: Type<any>[];
export { TdToggleDirective } from './directives/toggle/toggle.directive';
export { TdFadeDirective } from './directives/fade/fade.directive';
export { TdAutoTrimDirective } from './directives/auto-trim/auto-trim.directive';
export declare const TD_VALIDATORS: Type<any>[];
export { TdMinValidator } from './validators/min.validator';
export { TdMaxValidator } from './validators/max.validator';
export { TdNumberRequiredValidator } from './validators/number-required.validator';
export declare const TD_PIPES: Type<any>[];
export { TdOrderByPipe } from './pipes/orderby/orderby.pipe';
export { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';
export { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';
export { TdBytesPipe } from './pipes/bytes/bytes.pipe';
export { TdDigitsPipe } from './pipes/digits/digits.pipe';
export { TdTruncatePipe } from './pipes/truncate/truncate.pipe';
export { TdMediaService } from './media/services/media.service';
export { TdMediaToggleDirective } from './media/directives/media-toggle.directive';
export declare class CovalentCoreModule {
    static forRoot(): ModuleWithProviders;
}
