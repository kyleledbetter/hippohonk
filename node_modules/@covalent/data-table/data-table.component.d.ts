import { OnInit, AfterViewInit, EventEmitter, QueryList, Renderer } from '@angular/core';
import { MdInput } from '@angular/material';
import 'rxjs/add/operator/debounceTime';
export declare enum TdDataTableSortingOrder {
    Ascending = 0,
    Descending = 1,
}
export interface ITdDataTableColumn {
    name: string;
    label: string;
    tooltip?: string;
    numeric?: boolean;
    format?: {
        (value: any): any;
    };
}
export interface ITdDataTableSortEvent {
    column: ITdDataTableColumn;
    order: TdDataTableSortingOrder;
}
export declare class TdDataTableComponent implements OnInit, AfterViewInit {
    private renderer;
    /** internal attributes */
    private _data;
    private _visibleData;
    private _columns;
    private _rowSelection;
    private _rowSelectionField;
    private _multiple;
    private _search;
    private _hasData;
    private _initialized;
    /** pagination */
    private _pageSize;
    private _currentPage;
    private _totalPages;
    private _pagination;
    /** sorting */
    private _sorting;
    private _sortBy;
    private _sortOrder;
    /** search by term */
    private _searchVisible;
    private _searchTerm;
    private _searchTermControl;
    _searchTermInput: QueryList<MdInput>;
    /** events */
    sortChanged: EventEmitter<ITdDataTableSortEvent>;
    /** td-data-table element attributes */
    _title: string;
    data: Object[];
    pageSize: string | number;
    rowSelectionField: string;
    rowSelection: string | boolean;
    multiple: string | boolean;
    search: string | boolean;
    columns: ITdDataTableColumn[];
    sorting: string | boolean;
    sortBy: string;
    sortOrder: 'ASC' | 'DESC';
    pagination: string | boolean;
    readonly hasData: boolean;
    constructor(renderer: Renderer);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    areAllSelected(): boolean;
    selectAll(checked: boolean): void;
    select(row: any, checked: boolean, event: Event): void;
    toggleSearch(): void;
    focusOnSearch(): void;
    clearSearch(): void;
    setSorting(column: ITdDataTableColumn): void;
    notifySortChanged(): void;
    nextPage(): void;
    prevPage(): void;
    isAscending(): boolean;
    isDescending(): boolean;
    private preprocessData();
    private searchTermChanged(value);
    private resetPagination();
    private filterData();
}
